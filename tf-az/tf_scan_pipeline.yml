trigger:
  branches:
    include:
      - main

pool:
  name: Default  # This targets your self-hosted agent inside the 'Default' pool

variables:
  TF_VAR_location: 'eastus'        # Example of non-secret variable
  TF_VAR_environment: 'dev'        # Example of non-secret variable
  terraformCodeDir: 'tf-az'
  app_name: 'Tf_SP'

stages:
  - stage: Validate_And_Scan
    displayName: "Validate & Scan terraform  Code"
    jobs:
      - job: validate_and_scan
        displayName: "Run terraform  Validation & Scanning"
        steps:
          - checkout: self

          - script: |
              terraform -chdir=$(terraformCodeDir) init
              terraform -chdir=$(terraformCodeDir) validate
              # terraform -chdir=$(terraformCodeDir) fmt -check -diff
            displayName: 'terraform Init, Validate'
            env:
              ARM_CLIENT_ID: $(client_id)
              ARM_CLIENT_SECRET: $(client_secret)
              ARM_SUBSCRIPTION_ID: $(subscription_id)
              ARM_TENANT_ID: $(tenant_id)

  - stage: Plan
    displayName: "terraform Plan"
    dependsOn: Validate_And_Scan
    jobs:
      - job: terraform_plan
        displayName: "terraform Plan"
        steps:
          - checkout: self

          - script: |
              terraform -chdir=$(terraformCodeDir) init
              terraform -chdir=$(terraformCodeDir) plan \
                -var "client_id=$(client_id)" \
                -var "client_secret=$(client_secret)" \
                -var "tenant_id=$(tenant_id)" \
                -var "subscription_id=$(subscription_id)" \
                -var "app_name=$(app_name)" \
                -var "location=$(TF_VAR_location)" \
                -out=tfplan
            displayName: 'terraform Plan'
            env:
              ARM_CLIENT_ID: $(client_id)
              ARM_CLIENT_SECRET: $(client_secret)
              ARM_SUBSCRIPTION_ID: $(subscription_id)
              ARM_TENANT_ID: $(tenant_id)

          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: '$(terraformCodeDir)'
              artifactName: 'tfplan'
            displayName: 'Publish terraform Plan'

  - stage: WaitForApproval
    displayName: "Wait for Manual Approval"
    dependsOn: Plan
    jobs:
      - job: approval
        displayName: "Manual Approval"
        pool: server  # Required for ManualValidation@0
        steps:
          - task: ManualValidation@0
            inputs:
              instructions: 'Please approve to proceed with terraform apply'
              onTimeout: 'reject'
              timeout: '1d'

  - stage: Apply
    displayName: "terraform Apply"
    dependsOn: WaitForApproval
    jobs:
      - job: terraform_apply
        displayName: "terraform Apply"
        steps:
          - checkout: self

          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: 'tfplan'
              path: '$(terraformCodeDir)'

          - script: |
              terraform -chdir=$(terraformCodeDir) init
              terraform -chdir=$(terraformCodeDir) apply tfplan
            displayName: 'terraform Apply'
            env:
              ARM_CLIENT_ID: $(client_id)
              ARM_CLIENT_SECRET: $(client_secret)
              ARM_SUBSCRIPTION_ID: $(subscription_id)
              ARM_TENANT_ID: $(tenant_id)
