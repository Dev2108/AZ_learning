trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  azureSubscription: 'MyServiceConnection'  # Service connection name
  keyVaultName: 'terraform-kv-oro8ln'     # Your Azure Key Vault name

stages:
- stage: Upload_Secrets
  displayName: 'Upload Secrets to Azure Key Vault'
  jobs:
  - job: UploadSecrets
    displayName: 'Add Secrets'
    steps:

    - task: AzureCLI@2
      displayName: 'Login to Azure'
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az account show

    - task: AzureCLI@2
      displayName: 'Upload Secrets from Secure Pipeline Variables'
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az keyvault secret set --vault-name $(keyVaultName) --name "DB_PASSWORD" --value "$(DB_PASSWORD)"
          az keyvault secret set --vault-name $(keyVaultName) --name "API_TOKEN" --value "$(API_TOKEN)"

    # - task: AzureCLI@2
    #   displayName: 'Upload Certificates'
    #   inputs:
    #     azureSubscription: $(azureSubscription)
    #     scriptType: 'bash'
    #     scriptLocation: 'inlineScript'
    #     inlineScript: |
    #       echo "$(CERTIFICATE_BASE64)" | base64 --decode > certificate.pfx
    #       az keyvault certificate import --vault-name $(keyVaultName) --name "myCert" --file "certificate.pfx" --password "$(CERT_PASSWORD)"
